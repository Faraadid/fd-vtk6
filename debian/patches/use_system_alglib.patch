Description: Use system alglib
Author: Anton Gladky <gladk@debian.org>
Bug-Debian: http://bugs.debian.org/750187
Last-Update: 2014-06-03

Index: vtk6-6.1.0+dfsg/Filters/Statistics/vtkPCAStatistics.cxx
===================================================================
--- vtk6-6.1.0+dfsg.orig/Filters/Statistics/vtkPCAStatistics.cxx
+++ vtk6-6.1.0+dfsg/Filters/Statistics/vtkPCAStatistics.cxx
@@ -15,7 +15,7 @@
 #include <vector>
 #include <vtksys/ios/sstream>
 
-#include "alglib/svd.h"
+#include <linalg.h>
 
 // To Do:
 // - Add option to pre-multiply EigenVectors by normalization coeffs
@@ -494,7 +494,7 @@ int vtkPCAStatistics::FillInputPortInfor
 
 // ----------------------------------------------------------------------
 static void vtkPCAStatisticsNormalizeSpec( vtkVariantArray* normData,
-                                           ap::real_2d_array& cov,
+                                           alglib::real_2d_array& cov,
                                            vtkTable* normSpec,
                                            vtkTable* reqModel,
                                            bool triangle )
@@ -612,10 +612,10 @@ static void vtkPCAStatisticsNormalizeSpe
 
 // ----------------------------------------------------------------------
 static void vtkPCAStatisticsNormalizeVariance( vtkVariantArray* normData,
-                                               ap::real_2d_array& cov )
+                                               alglib::real_2d_array& cov )
 {
   vtkIdType i, j;
-  vtkIdType m = cov.gethighbound( 0 ) - cov.getlowbound( 0 ) + 1;
+  vtkIdType m = cov(0, 0) - cov(1, 0) + 1;
   for ( i = 0; i < m; ++ i )
     {
     normData->InsertNextValue( cov( i, i ) );
@@ -657,8 +657,8 @@ void vtkPCAStatistics::Derive( vtkMultiB
       continue;
       }
     vtkIdType m = reqModel->GetNumberOfColumns() - 2;
-    ap::real_2d_array cov;
-    cov.setbounds( 0, m - 1, 0, m - 1 );
+    alglib::real_2d_array cov;
+    cov.setcontent( m - 1, m - 1, 0 );
     // Fill the cov array with values from the vtkTable
     vtkIdType i, j;
     for ( j = 2; j < 2 + m; ++ j )
@@ -695,9 +695,9 @@ void vtkPCAStatistics::Derive( vtkMultiB
         // do nothing
         break;
       }
-    ap::real_2d_array u;
-    ap::real_1d_array s;
-    ap::real_2d_array vt;
+    alglib::real_2d_array u;
+    alglib::real_1d_array s;
+    alglib::real_2d_array vt;
     // Now that we have the covariance matrix, compute the SVD.
     // Note that vt is not computed since the VtNeeded parameter is 0.
     bool status = rmatrixsvd( cov, m, m, 2, 0, 2, s, u, vt );
Index: vtk6-6.1.0+dfsg/ThirdParty/alglib/CMakeLists.txt
===================================================================
--- vtk6-6.1.0+dfsg.orig/ThirdParty/alglib/CMakeLists.txt
+++ vtk6-6.1.0+dfsg/ThirdParty/alglib/CMakeLists.txt
@@ -1,9 +1,12 @@
 project( alglib )
 
 set(vtkalglib_THIRD_PARTY 1)
-set(vtkalglib_LIBRARIES vtkalglib)
+set(vtkalglib_LIBRARIES alglib)
 vtk_module_export_info()
 
+return()
+
+
 set( ALGLIB_SRCS
   ap.cpp
   bdsvd.cpp
